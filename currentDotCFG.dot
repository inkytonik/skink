digraph automaton {
    ".return" [prop=accepting,label=".return",shape=doublecircle]
    ".block.3.7.join" [label=".block.3.7.join",shape=oval]
    ".entry" [prop=initial,label=".entry",shape=circle]
    ".block.6.7.else" [label=".block.6.7.else",shape=oval]
    ".block.4.7.then" [label=".block.4.7.then",shape=oval]
    ".block.4.7.then" -> ".block.3.7.join" [label="CFGGoto(.block.3.7.join)"]
    ".entry" -> ".block.4.7.then" [label="CFGChoice(1,1,.block.4.7.then)"]
    ".block.6.7.else" -> ".block.3.7.join" [label="CFGGoto(.block.3.7.join)"]
    ".entry" -> ".block.6.7.else" [label="CFGChoice(1,0,.block.6.7.else)"]
    ".block.3.7.join" -> ".return" [label="CFGGoto(.return)"]
    }