FALSE
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

<key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
<key attr.name="sourcecode" attr.type="string" for="edge" id="sourcecode"/>
<key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
<key attr.name="control" attr.type="string" for="edge" id="control"/>
<key attr.name="startline" attr.type="int" for="edge" id="startline"/>
<key attr.name="originFileName" attr.type="string" for="edge" id="originfile"><default>stdin</default></key>
<key attr.name="nodeType" attr.type="string" for="node" id="nodetype"><default>path</default></key>
<key attr.name="isFrontierNode" attr.type="boolean" for="node" id="frontier"><default>false</default></key>
<key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation"><default>false</default></key>
<key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry"><default>false</default></key>
<key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink"><default>false</default></key>
<key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
<key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>

<key attr.name="block" attr.type="string" for="edge" id="block"/>
<key attr.name="choice" attr.type="string" for="edge" id="choice"/>
<key attr.name="startcolumn" attr.type="int" for="edge" id="startcolumn"/>

<graph edgedefault="directed">

<data key="sourcecodelang">C</data>

<edge source="n0" target="n1">
  <data key="block">%0</data>
  <data key="sourcecode">int MAX = __VERIFIER_nondet_uint();</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">13</data>
  <data key="startcolumn">9</data>
</edge>

<edge source="n1" target="n2">
  <data key="block">%12</data>
  <data key="sourcecode">for (i=0; i&lt;MAX; i++) {</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">18</data>
  <data key="startcolumn">15</data>
</edge>

<edge source="n2" target="n3">
  <data key="choice">%15 == true</data>
  <data key="sourcecode">for (i=0; i&lt;MAX; i++) {</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">18</data>
  <data key="startcolumn">16</data>
</edge>

<edge source="n3" target="n4">
  <data key="block">%16</data>
  <data key="sourcecode">str1[i]=__VERIFIER_nondet_char();</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">19</data>
  <data key="startcolumn">17</data>
</edge>

<edge source="n4" target="n5">
  <data key="block">%21</data>
  <data key="sourcecode">for (i=0; i&lt;MAX; i++) {</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">18</data>
  <data key="startcolumn">23</data>
</edge>

<edge source="n5" target="n6">
  <data key="block">%12</data>
  <data key="sourcecode">for (i=0; i&lt;MAX; i++) {</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">18</data>
  <data key="startcolumn">15</data>
</edge>

<edge source="n6" target="n7">
  <data key="choice">%15 == false</data>
  <data key="sourcecode">for (i=0; i&lt;MAX; i++) {</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">18</data>
  <data key="startcolumn">16</data>
</edge>

<edge source="n7" target="n8">
  <data key="block">%24</data>
  <data key="sourcecode">str1[MAX-1]= '\0';</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">21</data>
  <data key="startcolumn">7</data>
</edge>

<edge source="n8" target="n9">
  <data key="block">%31</data>
  <data key="sourcecode">for (i = MAX - 1; i &gt;= 0; i--) {</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">25</data>
  <data key="startcolumn">23</data>
</edge>

<edge source="n9" target="n10">
  <data key="choice">%33 == true</data>
  <data key="sourcecode">for (i = MAX - 1; i &gt;= 0; i--) {</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">25</data>
  <data key="startcolumn">25</data>
</edge>

<edge source="n10" target="n11">
  <data key="block">%34</data>
  <data key="sourcecode">str2[j] = str1[0];</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">26</data>
  <data key="startcolumn">19</data>
</edge>

<edge source="n11" target="n12">
  <data key="block">%42</data>
  <data key="sourcecode">for (i = MAX - 1; i &gt;= 0; i--) {</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">25</data>
  <data key="startcolumn">32</data>
</edge>

<edge source="n12" target="n13">
  <data key="block">%31</data>
  <data key="sourcecode">for (i = MAX - 1; i &gt;= 0; i--) {</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">25</data>
  <data key="startcolumn">23</data>
</edge>

<edge source="n13" target="n14">
  <data key="choice">%33 == false</data>
  <data key="sourcecode">for (i = MAX - 1; i &gt;= 0; i--) {</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">25</data>
  <data key="startcolumn">25</data>
</edge>

<edge source="n14" target="n15">
  <data key="block">%45</data>
  <data key="sourcecode">j = MAX-1;</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">30</data>
  <data key="startcolumn">9</data>
</edge>

<edge source="n15" target="n16">
  <data key="block">%48</data>
  <data key="sourcecode">for (i=0; i&lt;MAX; i++) {</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">31</data>
  <data key="startcolumn">15</data>
</edge>

<edge source="n16" target="n17">
  <data key="choice">%51 == true</data>
  <data key="sourcecode">for (i=0; i&lt;MAX; i++) {</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">31</data>
  <data key="startcolumn">16</data>
</edge>

<edge source="n17" target="n18">
  <data key="block">%52</data>
  <data key="sourcecode">__VERIFIER_assert(str1[i] == str2[j]);</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">32</data>
  <data key="startcolumn">30</data>
</edge>

<edge source="n18" target="n19">
  <data key="choice">%67 == false</data>
  <data key="sourcecode">if (!(cond)) {</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">4</data>
  <data key="startcolumn">8</data>
</edge>

<edge source="n19" target="n20">
  <data key="block">%.error.%68</data>
  <data key="sourcecode">ERROR: __VERIFIER_error();</data>
  <data key="originfile">invert_string_false-unreach-call.i</data>
  <data key="startline">5</data>
  <data key="startcolumn">12</data>
</edge>

<node id="n0"><data key="entry">true</data></node>
<node id="n1"></node>
<node id="n2"></node>
<node id="n3"></node>
<node id="n4"></node>
<node id="n5"></node>
<node id="n6"></node>
<node id="n7"></node>
<node id="n8"></node>
<node id="n9"></node>
<node id="n10"></node>
<node id="n11"></node>
<node id="n12"></node>
<node id="n13"></node>
<node id="n14"></node>
<node id="n15"></node>
<node id="n16"></node>
<node id="n17"></node>
<node id="n18"></node>
<node id="n19"></node>
<node id="n20"><data key="sink">true</data></node>

</graph>

</graphml>
