FALSE
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

<key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
<key attr.name="sourcecode" attr.type="string" for="edge" id="sourcecode"/>
<key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
<key attr.name="control" attr.type="string" for="edge" id="control"/>
<key attr.name="startline" attr.type="int" for="edge" id="startline"/>
<key attr.name="originFileName" attr.type="string" for="edge" id="originfile"><default>stdin</default></key>
<key attr.name="nodeType" attr.type="string" for="node" id="nodetype"><default>path</default></key>
<key attr.name="isFrontierNode" attr.type="boolean" for="node" id="frontier"><default>false</default></key>
<key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation"><default>false</default></key>
<key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry"><default>false</default></key>
<key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink"><default>false</default></key>
<key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
<key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>

<key attr.name="block" attr.type="string" for="edge" id="block"/>
<key attr.name="choice" attr.type="string" for="edge" id="choice"/>
<key attr.name="startcolumn" attr.type="int" for="edge" id="startcolumn"/>

<graph edgedefault="directed">

<data key="sourcecodelang">C</data>

<edge source="n0" target="n1">
  <data key="block">%0</data>
  <data key="sourcecode">SIZE=(__VERIFIER_nondet_uint()/2)+1;</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">21</data>
  <data key="startcolumn">9</data>
</edge>

<edge source="n1" target="n2">
  <data key="block">%24</data>
  <data key="sourcecode">while (j&lt;n &amp;&amp; a[j]!=q) {</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">13</data>
  <data key="startcolumn">10</data>
</edge>

<edge source="n2" target="n3">
  <data key="choice">%27 == true</data>
  <data key="sourcecode">while (j&lt;n &amp;&amp; a[j]!=q) {</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">13</data>
  <data key="startcolumn">11</data>
</edge>

<edge source="n3" target="n4">
  <data key="block">%28</data>
  <data key="sourcecode">while (j&lt;n &amp;&amp; a[j]!=q) {</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">13</data>
  <data key="startcolumn">19</data>
</edge>

<edge source="n4" target="n5">
  <data key="block">%36.phi.%28</data>
  <data key="sourcecode">while (j&lt;n &amp;&amp; a[j]!=q) {</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">13</data>
  <data key="startcolumn">3</data>
</edge>

<edge source="n5" target="n6">
  <data key="choice">%37 == true</data>
  <data key="sourcecode">__VERIFIER_assert(linear_search(a,SIZE,3));</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">24</data>
  <data key="startcolumn">21</data>
</edge>

<edge source="n6" target="n7">
  <data key="block">%38</data>
  <data key="sourcecode">j++;</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">14</data>
  <data key="startcolumn">4</data>
</edge>

<edge source="n7" target="n8">
  <data key="choice">%42 == false</data>
  <data key="sourcecode">if (j==20) j=-1;</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">15</data>
  <data key="startcolumn">8</data>
</edge>

<edge source="n8" target="n9">
  <data key="block">%24</data>
  <data key="sourcecode">while (j&lt;n &amp;&amp; a[j]!=q) {</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">13</data>
  <data key="startcolumn">10</data>
</edge>

<edge source="n9" target="n10">
  <data key="choice">%27 == false</data>
  <data key="sourcecode">while (j&lt;n &amp;&amp; a[j]!=q) {</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">13</data>
  <data key="startcolumn">11</data>
</edge>

<edge source="n10" target="n11">
  <data key="block">%36.phi.%24</data>
  <data key="sourcecode">while (j&lt;n &amp;&amp; a[j]!=q) {</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">13</data>
  <data key="startcolumn">3</data>
</edge>

<edge source="n11" target="n12">
  <data key="choice">%37 == false</data>
  <data key="sourcecode">__VERIFIER_assert(linear_search(a,SIZE,3));</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">24</data>
  <data key="startcolumn">21</data>
</edge>

<edge source="n12" target="n13">
  <data key="block">%45</data>
  <data key="sourcecode">if (j&lt;SIZE) return 1;</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">17</data>
  <data key="startcolumn">7</data>
</edge>

<edge source="n13" target="n14">
  <data key="choice">%48 == false</data>
  <data key="sourcecode">if (j&lt;SIZE) return 1;</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">17</data>
  <data key="startcolumn">8</data>
</edge>

<edge source="n14" target="n15">
  <data key="block">%50</data>
  <data key="sourcecode">else return 0;</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">18</data>
  <data key="startcolumn">8</data>
</edge>

<edge source="n15" target="n16">
  <data key="block">%linear_search.exit</data>
  <data key="sourcecode">}</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">19</data>
  <data key="startcolumn">1</data>
</edge>

<edge source="n16" target="n17">
  <data key="choice">%59 == false</data>
  <data key="sourcecode">if (!(cond)) {</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">4</data>
  <data key="startcolumn">8</data>
</edge>

<edge source="n17" target="n18">
  <data key="block">%.error.%60</data>
  <data key="sourcecode">ERROR: __VERIFIER_error();</data>
  <data key="originfile">linear_search_false-unreach-call.i</data>
  <data key="startline">5</data>
  <data key="startcolumn">12</data>
</edge>

<node id="n0"><data key="entry">true</data></node>
<node id="n1"></node>
<node id="n2"></node>
<node id="n3"></node>
<node id="n4"></node>
<node id="n5"></node>
<node id="n6"></node>
<node id="n7"></node>
<node id="n8"></node>
<node id="n9"></node>
<node id="n10"></node>
<node id="n11"></node>
<node id="n12"></node>
<node id="n13"></node>
<node id="n14"></node>
<node id="n15"></node>
<node id="n16"></node>
<node id="n17"></node>
<node id="n18"><data key="sink">true</data></node>

</graph>

</graphml>
