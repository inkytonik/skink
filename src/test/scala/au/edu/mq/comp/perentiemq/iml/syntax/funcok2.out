Program (
    List (
        FunDef (
            "funcok2",
            List (Arg ("x")),
            List (Arg ("o")),
            Block (
                List (Assign (List (Var ("o")), List (ELoad (Var ("x"))))))),
        FunDef (
            "foo",
            List (TypedArg ("x", BoolType ()), TypedArg ("y", IntType ())),
            List (TypedArg ("o1", ArrayType ()), Arg ("o2"), Arg ("o3")),
            Block (
                List (
                    Assign (
                        List (Var ("o1")),
                        List (Add (ELoad (Var ("x")), ELoad (Var ("y"))))),
                    Assign (List (Var ("o2")), List (ELoad (Var ("x")))),
                    Assign (List (Var ("o3")), List (ELoad (Var ("y")))),
                    Call (List (Var ("o1"), Var ("o2")), "bar", Nil)))),
        FunDef (
            "bar",
            Nil,
            List (Arg ("o1"), Arg ("o2")),
            Block (
                List (
                    Assign (List (Var ("o1")), List (IntLit (1))),
                    Assign (List (Var ("o2")), List (IntLit (2))))))))
def funcok2(x): (o) {
    o = x;
}

def foo(x: Bool, y: Int): (o1: Array, o2, o3) {
    o1 = x + y;
    o2 = x;
    o3 = y;
    o1, o2 = bar();
}

def bar(): (o1, o2) {
    o1 = 1;
    o2 = 2;
}

