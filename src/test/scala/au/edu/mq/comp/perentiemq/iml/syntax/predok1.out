Program (
    List (
        FunDef (
            "predok1",
            List (TypedArg ("a", BoolType ())),
            List (TypedArg ("b", BoolType ())),
            Block (
                List (
                    Assert (Or (PLoad (Var ("a")), PLoad (Var ("b")))),
                    Assert (And (PLoad (Var ("a")), PLoad (Var ("b")))),
                    Assert (EQ (ELoad (Var ("c")), ELoad (Var ("d")))),
                    Assert (NEQ (ELoad (Var ("c")), ELoad (Var ("d")))),
                    Assert (LE (ELoad (Var ("c")), ELoad (Var ("d")))),
                    Assert (LT (ELoad (Var ("c")), ELoad (Var ("d")))),
                    Assert (GE (ELoad (Var ("c")), ELoad (Var ("d")))),
                    Assert (GT (ELoad (Var ("c")), ELoad (Var ("d")))),
                    Assert (Not (PLoad (Var ("b")))),
                    Assert (False ()),
                    Assert (True ()),
                    Assert (
                        Or (
                            PLoad (Var ("a")),
                            And (PLoad (Var ("b")), PLoad (Var ("c"))))),
                    Assert (
                        Or (
                            And (PLoad (Var ("a")), PLoad (Var ("b"))),
                            PLoad (Var ("c")))),
                    Assert (
                        Or (
                            Or (PLoad (Var ("b")), PLoad (Var ("c"))),
                            PLoad (Var ("d")))),
                    Assert (
                        Or (
                            And (PLoad (Var ("b")), PLoad (Var ("c"))),
                            PLoad (Var ("d")))),
                    Assert (
                        Or (
                            PLoad (Var ("b")),
                            And (PLoad (Var ("c")), PLoad (Var ("d"))))),
                    Assert (
                        And (
                            And (PLoad (Var ("b")), PLoad (Var ("c"))),
                            PLoad (Var ("d")))),
                    Assert (
                        And (
                            Or (PLoad (Var ("b")), PLoad (Var ("c"))),
                            PLoad (Var ("d")))),
                    Assert (
                        And (
                            PLoad (Var ("b")),
                            Or (PLoad (Var ("c")), PLoad (Var ("d"))))),
                    Assert (
                        Or (
                            PLoad (Var ("b")),
                            Or (PLoad (Var ("c")), PLoad (Var ("d"))))),
                    Assert (
                        Or (
                            EQ (ELoad (Var ("c")), ELoad (Var ("d"))),
                            LT (ELoad (Var ("d")), ELoad (Var ("c"))))))))))
def predok1(a: Bool): (b: Bool) {
    assert (a || b);
    assert (a && b);
    assert (c == d);
    assert (c != d);
    assert (c <= d);
    assert (c < d);
    assert (c >= d);
    assert (c > d);
    assert (!b);
    assert (false);
    assert (true);
    assert (a || b && c);
    assert (a && b || c);
    assert (b || c || d);
    assert (b && c || d);
    assert (b || c && d);
    assert (b && c && d);
    assert ((b || c) && d);
    assert (b && (c || d));
    assert (b || (c || d));
    assert (c == d || d < c);
}

